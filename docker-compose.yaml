version: "3.8"

services:
  postgres:
    container_name: pg_db
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=PG
    volumes:
      - pg_data:/var/lib/postgresql/data
    tty: true
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "PG", "-U", "admin"]
      interval: 3s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongoadmin

  celery:
    container_name: celery
    build:
      context: ./backend/
      dockerfile: Dockerfile.celery
    volumes:
      - ./backend/app:/usr/src/app:delegated
    depends_on:
      - rabbitmq
      - mongo
      - postgres
    environment:
      DJANGO_SETTINGS_MODULE: app.settings
      PG_HOST: postgres
      PG_NAME: PG
      PG_USER: admin
      PG_PASSWORD: admin
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: mongoadmin
      MONGO_PASS: mongoadmin

  rabbitmq:
    image: "rabbitmq:3.12-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  django:
    container_name: django
    build:
      context: ./backend/
      dockerfile: Dockerfile.django
    ports:
      - "8000:8000"
    environment:
      PG_HOST: postgres
      PG_NAME: PG
      PG_USER: admin
      PG_PASSWORD: admin
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      MONGO_USER: mongoadmin
      MONGO_PASS: mongoadmin
    volumes:
      - ./backend/app:/usr/src/app:delegated
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_started
      celery:
        condition: service_started
      postgres:
        condition: service_healthy
    links:
      - postgres
    tty: true

  black:
    container_name: black
    build:
      context: ./backend/
      dockerfile: Dockerfile.formatter
    volumes:
      - ./backend/:/usr/src/app:delegated
    tty : true

volumes:
  pg_data:
  mongo_data:
